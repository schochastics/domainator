---
title: domainator - Classify Domains using Webservices and Lists
format:
  html:
    embed-resources: true
  gfm: default
---

## Description

<!-- - Provide a brief and clear description of the method, its purpose, and what it aims to achieve. Add a link to a related paper from social science domain and show how your method can be applied to solve that research question.   -->

The package wraps various APIs to classify domains and provides manually annotated lists of online media and platforms. 

## Keywords

<!-- EDITME -->

* Digital Behavioral Data 
* URL classification
* Data Preprocessing

## Science Usecase(s)

The package enables systematic categorization of websites into types such as news outlets, e-commerce, social media, educational platforms, or others. This tool facilitates the analysis of digital ecosystems by providing a structured understanding of the online spaces individuals and organizations inhabit. 

## Repository structure

This repository follows [the standard structure of an R package](https://cran.r-project.org/doc/FAQ/R-exts.html#Package-structure).

## Environment Setup

With R installed:

```r
install.packages("devtools")
devtools::install_github("schochastics/domainator")
```

## Hardware Requirements

Domainator runs on any machine that can run R.

## Input Data 

domains to be classified as character vectors

## How to Use

Each classification service comes with its own function in the form of `get_url_category_<name_of_service>`

## Technical Details

<!--
1. The technical details section should proview a process overview, linking to key source code files at every step of the process.
2. In case a publication provides the details mentioned below, the technical details section should link to this publication using a sentence like "See the [publication](url-of-publication-best-using-doi) for ...". In this case, the mentioned technical details can be omitted from the section.
3. The technical details section should list all information needed to reproduce the method, including employed other methods and selected parameters.
4. The input data section should link to external data it uses, preferably using a DOI to a dataset page or to API documentation.
5. The technical details section should mention how other methods and their parameters were selected and which alternatives were tried.
6. The technical details section should for employed machine learning models mention on what kind of data they were trained.
-->

METHOD does XXX by performing the following steps:

1. Reading. The data is read from the input file (`--input-file`) and converted into XXX. (see [method-package/example-source-file.py](method-package/example-source-file.py))
2. Downloading data. XXX data is fetched from [XXX](https:/example.com/).
3. XXX. To do XXX, the method uses [XXX](https:/example.com/) with XXX set to XXX (change using `--xxx` or setting `xxx` in the [configuration file](example.conf)). (see [method-package/example-source-file.py](method-package/example-source-file.py))
4. Writing. The result is written to the output file (`--output-file`). (see [method-package/example-source-file.py](method-package/example-source-file.py))

See the [publication](https:/example.com/) for tested and selected models and parameters, the reasoning behind the model selection, and employed datasets for training.

## Contact Details

Maintainer: David Schoch <david@schochastics.net>

Issue Tracker: [https://github.com/schochastics/domainator/issues](https://github.com/schochastics/domainator/issues)

<!-- ## Publication -->
<!-- - Include information on publications or articles related to the method, if applicable. -->

<!-- ## Acknowledgements -->
<!-- - Acknowledgements if any -->

<!-- ## Disclaimer -->
<!-- - Add any disclaimers, legal notices, or usage restrictions for the method, if necessary. -->
